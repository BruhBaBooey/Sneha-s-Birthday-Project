{"ast":null,"code":"var _jsxFileName = \"E:\\\\My Projects\\\\sneha-birthday\\\\src\\\\Puzzle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PuzzleGame.css';\nimport puzzleImage from './assets/puzzle-image.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pieceCount = 3;\nconst totalPieces = pieceCount * pieceCount;\nexport default function Puzzle() {\n  _s();\n  const [pieces, setPieces] = useState([]);\n  const [board, setBoard] = useState(Array(totalPieces).fill(null));\n  useEffect(() => {\n    const tempPieces = Array.from({\n      length: totalPieces\n    }, (_, index) => index);\n    shuffleArray(tempPieces);\n    setPieces(tempPieces);\n  }, []);\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n  const handleDrop = (targetIndex, sourceIndex) => {\n    const newBoard = [...board];\n    if (newBoard[targetIndex] === null) {\n      newBoard[targetIndex] = pieces[sourceIndex];\n      const newPieces = [...pieces];\n      newPieces.splice(sourceIndex, 1);\n      setPieces(newPieces);\n      setBoard(newBoard);\n    }\n  };\n  const getBackgroundPosition = index => {\n    const x = index % pieceCount * (100 / (pieceCount - 1));\n    const y = Math.floor(index / pieceCount) * (100 / (pieceCount - 1));\n    return `${x}% ${y}%`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"puzzle-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puzzle-board\",\n      children: board.map((pieceIndex, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"puzzle-slot\",\n        onDragOver: e => e.preventDefault(),\n        onDrop: e => {\n          const sourceIndex = parseInt(e.dataTransfer.getData('text/plain'), 10);\n          handleDrop(i, sourceIndex);\n        },\n        children: pieceIndex !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-piece\",\n          style: {\n            backgroundImage: `url(${puzzleImage})`,\n            backgroundSize: `${pieceCount * 100}%`,\n            backgroundPosition: getBackgroundPosition(pieceIndex)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puzzle-tray\",\n      children: pieces.map((index, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"puzzle-piece\",\n        draggable: true,\n        onDragStart: e => e.dataTransfer.setData('text/plain', i),\n        style: {\n          backgroundImage: `url(${puzzleImage})`,\n          backgroundSize: `${pieceCount * 100}%`,\n          backgroundPosition: getBackgroundPosition(index)\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Puzzle, \"jZMLXnHJKaTQKueYmowSfemTUog=\");\n_c = Puzzle;\nvar _c;\n$RefreshReg$(_c, \"Puzzle\");","map":{"version":3,"names":["React","useState","useEffect","puzzleImage","jsxDEV","_jsxDEV","pieceCount","totalPieces","Puzzle","_s","pieces","setPieces","board","setBoard","Array","fill","tempPieces","from","length","_","index","shuffleArray","array","i","j","Math","floor","random","handleDrop","targetIndex","sourceIndex","newBoard","newPieces","splice","getBackgroundPosition","x","y","className","children","map","pieceIndex","onDragOver","e","preventDefault","onDrop","parseInt","dataTransfer","getData","style","backgroundImage","backgroundSize","backgroundPosition","fileName","_jsxFileName","lineNumber","columnNumber","draggable","onDragStart","setData","_c","$RefreshReg$"],"sources":["E:/My Projects/sneha-birthday/src/Puzzle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PuzzleGame.css';\r\nimport puzzleImage from './assets/puzzle-image.png';\r\n\r\nconst pieceCount = 3;\r\nconst totalPieces = pieceCount * pieceCount;\r\n\r\nexport default function Puzzle() {\r\n  const [pieces, setPieces] = useState([]);\r\n  const [board, setBoard] = useState(Array(totalPieces).fill(null));\r\n\r\n  useEffect(() => {\r\n    const tempPieces = Array.from({ length: totalPieces }, (_, index) => index);\r\n    shuffleArray(tempPieces);\r\n    setPieces(tempPieces);\r\n  }, []);\r\n\r\n  const shuffleArray = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  };\r\n\r\n  const handleDrop = (targetIndex, sourceIndex) => {\r\n    const newBoard = [...board];\r\n    if (newBoard[targetIndex] === null) {\r\n      newBoard[targetIndex] = pieces[sourceIndex];\r\n      const newPieces = [...pieces];\r\n      newPieces.splice(sourceIndex, 1);\r\n      setPieces(newPieces);\r\n      setBoard(newBoard);\r\n    }\r\n  };\r\n\r\n  const getBackgroundPosition = (index) => {\r\n    const x = (index % pieceCount) * (100 / (pieceCount - 1));\r\n    const y = Math.floor(index / pieceCount) * (100 / (pieceCount - 1));\r\n    return `${x}% ${y}%`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"puzzle-wrapper\">\r\n      <div className=\"puzzle-board\">\r\n        {board.map((pieceIndex, i) => (\r\n          <div\r\n            key={i}\r\n            className=\"puzzle-slot\"\r\n            onDragOver={(e) => e.preventDefault()}\r\n            onDrop={(e) => {\r\n              const sourceIndex = parseInt(e.dataTransfer.getData('text/plain'), 10);\r\n              handleDrop(i, sourceIndex);\r\n            }}\r\n          >\r\n            {pieceIndex !== null && (\r\n              <div\r\n                className=\"puzzle-piece\"\r\n                style={{\r\n                  backgroundImage: `url(${puzzleImage})`,\r\n                  backgroundSize: `${pieceCount * 100}%`,\r\n                  backgroundPosition: getBackgroundPosition(pieceIndex),\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"puzzle-tray\">\r\n        {pieces.map((index, i) => (\r\n          <div\r\n            key={index}\r\n            className=\"puzzle-piece\"\r\n            draggable\r\n            onDragStart={(e) => e.dataTransfer.setData('text/plain', i)}\r\n            style={{\r\n              backgroundImage: `url(${puzzleImage})`,\r\n              backgroundSize: `${pieceCount * 100}%`,\r\n              backgroundPosition: getBackgroundPosition(index),\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}